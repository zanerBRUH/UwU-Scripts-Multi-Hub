local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local colors = {
    SchemeColor = Color3.fromRGB(102, 0, 0),
    Background = Color3.fromRGB(10, 10, 10),
    Header = Color3.fromRGB(5, 5, 5),
    TextColor = Color3.fromRGB(255,255,255),
    ElementColor = Color3.fromRGB(20, 20, 20)
}
local Window = Library.CreateLib("UwU Scripts", colors)
local Version = "0.0.2"

local HomeTab = Window:NewTab("Info")
local InfoSection = HomeTab:NewSection("Info")
local CreditsSection = HomeTab:NewSection("Credits")

InfoSection:NewLabel("Welcome, " .. game.Players.LocalPlayer.Name .. " to UwU Scripts.")
InfoSection:NewLabel("The Script version is " .. Version .. ".")
InfoSection:NewLabel("Our Site: Unavailable")

CreditsSection:NewLabel("Creator: UwU Scripts")
CreditsSection:NewLabel("Hub UI: Kavo UI")

local UniversalTab = Window:NewTab("Universal")
local UniversalSection1 = UniversalTab:NewSection("Character")

UniversalSection1:NewSlider("Speed", "Changes your walkspeed", 500, 16, function(s) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)

UniversalSection1:NewSlider("Jump Power", "Changes your jump power", 500, 50, function(jp) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = jp
end)

UniversalSection1:NewToggle("Toggle Jump Power", "Toggles your jump power", function(state)
if state then
    game.Players.LocalPlayer.Character.Humanoid.UseJumpPower = true
else
    game.Players.LocalPlayer.Character.Humanoid.UseJumpPower = false
end
end)

UniversalSection1:NewButton("Inf Jumps", "Enables Inf Jumps", function()
    local InfiniteJumpEnabled = true
game:GetService("UserInputService").JumpRequest:connect(function()
	if InfiniteJumpEnabled then
		game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
	end
end)
end)

UniversalSection1:NewSlider("Fov", "Changes player's fov", 120, 60, function(v) -- 500 (MaxValue) | 0 (MinValue)
    game.Workspace.CurrentCamera.FieldOfView = v
end)



-- Example Ui
    if game.PlaceId == 9498006165 then
    InfoSection:NewLabel("You are playing Tapping Simulator by Zood Studios.")


-- Tabs/Sections
local FarmTab = Window:NewTab("Autofarm")
local FarmSection = FarmTab:NewSection("Autofarm")
local MiscSection = FarmTab:NewSection("Misc")
local RebirthTab = Window:NewTab("Rebirth")
local RebirthSection = RebirthTab:NewSection("Rebirth")
local EggsTab = Window:NewTab("Auto Eggs")
local EggsSection = EggsTab:NewSection("Eggs")
local TeleportTab = Window:NewTab("Teleport")
local TeleportSection = TeleportTab:NewSection("Teleport")
local CustomTab = Window:NewTab("Customize")
local KeybindsSection = CustomTab:NewSection("Keybinds")
local ColorSection = CustomTab:NewSection("Color (Unavailable)")

KeybindsSection:NewKeybind("Toggle UI", "Pressing the keybind toggles the UI", Enum.KeyCode.LeftAlt, function()
	Library:ToggleUI()
end)



-- Getgenv/local
getgenv().autoTap = false;
getgenv().autoRebirth = false;
getgenv().autoEgg = false;
local humanoid = game.Players.LocalPlayer.Character.Humanoid
local EpicPlayerMan = game.Players.LocalPlayer.Character.HumanoidRootPart
local UnlockGamepasses = require(game:GetService("ReplicatedStorage").Classes.Player)



-- Functions
function aTap()
    spawn(function()
        while autoTap == true do
        game:GetService("ReplicatedStorage").Events.Tap:InvokeServer()
        end
    end)
end

function aRebirth(rebirthAmount)
    spawn(function()
        while autoRebirth == true do
            game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(rebirthAmount)
            wait(1.0)
        end
    end)
end

function aEgg(eggType)
spawn(function()
        while autoEgg == true do
            local args = {
                [1] = {},
                [2] = (eggType),
                [3] = 1
            }
            game:GetService("ReplicatedStorage").Events.HatchEgg:InvokeServer(unpack(args))
            wait(1.0)
        end
    end)
end

function getCurrentPlayerPOS()
    local plyr = game.PLayers.LocalPlayer;
    if plyr.Character then
        return plyr.Character.HumanoidRootPart.Position;
    end
        return false;
end


local Spawn = CFrame.new(-70, 17, -481)
local Forest = CFrame.new(-164, 977, -398)
local Flower = CFrame.new(-180, 1514, -687)
local Swamp = CFrame.new(-264, 2113, -700)
local Snow = CFrame.new(-197, 2512, -470)
local Desert = CFrame.new(-161, 3340, -779)
local Death = CFrame.new(-271, 4382, -480)
local Beach = CFrame.new(-135, 5778, -496)
-- local DominusIsland = CFrame.new()

function SpawnIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Spawn
end


function ForestIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Forest
end


function FlowerIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Flower
end


function SwampIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Swamp
end


function SnowIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Snow
end


function DesertIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Desert
end


function DeathIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Death
end


function BeachIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Beach
end


function DominusIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Dominus
end















-- Misc
MiscSection:NewButton("Unlock Gamepasses", "Unlocks some gamespasses", function()
    UnlockGamepasses.ownsGamePass = function() return true end
end)

MiscSection:NewButton("Tween Teleport Ctrl+Click", "Press Ctrl+Click to teleport wherever :D", function()
    local speed = 100 -- set this lower to make it slower
    local bodyvelocityenabled = true -- set this to false if you are getting kicked
    
    local Imput = game:GetService("UserInputService")
    local Plr = game.Players.LocalPlayer
    local Mouse = Plr:GetMouse()
    
    function To(position)
    local Chr = Plr.Character
    if Chr ~= nil then
    local ts = game:GetService("TweenService")
    local char = game.Players.LocalPlayer.Character
    local hm = char.HumanoidRootPart
    local dist = (hm.Position - Mouse.Hit.p).magnitude
    local tweenspeed = dist/tonumber(speed)
    local ti = TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear)
    local tp = {CFrame = CFrame.new(position)}
    ts:Create(hm, ti, tp):Play()
    if bodyvelocityenabled == true then
    local bv = Instance.new("BodyVelocity")
    bv.Parent = hm
    bv.MaxForce = Vector3.new(100000,100000,100000)
    bv.Velocity = Vector3.new(0,0,0)
    wait(tonumber(tweenspeed))
    bv:Destroy()
    end
    end
    end
    end)







-- Autofarm
FarmSection:NewToggle("Auto Tap", "Taps for you", function(state)
autoTap = true;
if state then
    aTap()
else
    autoTap = false;
end
end)



-- Auto Rebirth
local selectedRebirth;

RebirthSection:NewDropdown("Auto Rebirth", "Select the amount you would like to rebirth by", {"1", "5", "10", "20", "100", "500", "2000", "4500", "8000" }, function(value)
    selectedRebirth = value;
    print('Rebirth amount selected is: ', value)
end)


RebirthSection:NewToggle("Toggle Auto Rebirth", "Toggles the auto rebirth function", function(state)
    if state then
        autoRebirth = true
        aRebirth(selectedRebirth);
        print('Auto Rebirth is true')
    else
        autoRebirth = false
        print('Auto Rebirth is false')
    end
end)



-- Auto Eggs
local selectedEgg;

EggsSection:NewDropdown("Auto Open Egg", "Select the egg you want to open", {"Starter", "Wood Egg", "Jungle Egg", "Forest Egg", "Bee Egg", "Swamp Egg", "Snow Egg", "Desert Egg", "Death Egg", "Beach Egg", "Dominus Egg" }, function(value)
    selectedEgg = value;
    print('Egg selected is: ', value)
end)

EggsSection:NewToggle("Toggle Auto Egg Open", "Toggles the auto Egg Open function", function(state)
    if state then
        autoEgg = true
        aEgg(selectedEgg);
        print('Auto Egg Open is true')
    else
        autoEgg = false
        print('Auto Egg Open is false')
    end
end)



-- Teleport
local selectedIsland;

TeleportSection:NewButton("Spawn Island", "Teleports you to Spawn Island", function()
    SpawnIslandTeleport()
    print('Teleported to Spawn Island')
end)

TeleportSection:NewButton("Forest Island", "Teleports you to Forest Island", function()
    ForestIslandTeleport()
    print('Teleported to Forest Island')
end)


TeleportSection:NewButton("Flower Island", "Teleports you to Flower Island", function()
    FlowerIslandTeleport()
    print('Teleported to Flower Island')
end)


TeleportSection:NewButton("Swamp Island", "Teleports you to Swamp Island", function()
    SwampIslandTeleport()
    print('Teleported to Swamp Island')
end)


TeleportSection:NewButton("Snow Island", "Teleports you to Snow Island", function()
    SnowIslandTeleport()
    print('Teleported to Snow Island')
end)


TeleportSection:NewButton("Desert Island", "Teleports you to Desert Island", function()
    DesertIslandTeleport()
    print('Teleported to Desert Island')
end)


TeleportSection:NewButton("Death Island", "Teleports you to Death Island", function()
    DeathIslandTeleport()
    print('Teleported to Death Island')
end)


TeleportSection:NewButton("Beach Island", "Teleports you to Beach Island", function()
    BeachIslandTeleport()
    print('Teleported to Beach Island')
end)


TeleportSection:NewButton("Dominus Island", "Teleports you to Dominus Island", function()
    DominusIslandTeleport()
    print('Teleported to Dominus Island')
end)



















end
