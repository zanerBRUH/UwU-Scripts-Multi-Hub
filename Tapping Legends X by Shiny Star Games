local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local colors = {
    SchemeColor = Color3.fromRGB(102, 0, 0),
    Background = Color3.fromRGB(10, 10, 10),
    Header = Color3.fromRGB(5, 5, 5),
    TextColor = Color3.fromRGB(255,255,255),
    ElementColor = Color3.fromRGB(20, 20, 20)
}
local Window = Library.CreateLib("UwU Scripts", colors)
local Version = "0.0.2"

local HomeTab = Window:NewTab("Info")
local InfoSection = HomeTab:NewSection("Info")
local CreditsSection = HomeTab:NewSection("Credits")

InfoSection:NewLabel("Welcome, " .. game.Players.LocalPlayer.Name .. " to UwU Scripts.")
InfoSection:NewLabel("The Script version is " .. Version .. ".")
InfoSection:NewLabel("Our Site: Unavailable")

CreditsSection:NewLabel("Creator: UwU Scripts")
CreditsSection:NewLabel("Hub UI: Kavo UI")

local UniversalTab = Window:NewTab("Universal")
local UniversalSection1 = UniversalTab:NewSection("Character")

UniversalSection1:NewSlider("Speed", "Changes your walkspeed", 500, 16, function(s) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)

UniversalSection1:NewSlider("Jump Power", "Changes your jump power", 500, 50, function(jp) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = jp
end)

UniversalSection1:NewToggle("Toggle Jump Power", "Toggles your jump power", function(state)
if state then
    game.Players.LocalPlayer.Character.Humanoid.UseJumpPower = true
else
    game.Players.LocalPlayer.Character.Humanoid.UseJumpPower = false
end
end)

UniversalSection1:NewButton("Inf Jumps", "Enables Inf Jumps", function()
    local InfiniteJumpEnabled = true
game:GetService("UserInputService").JumpRequest:connect(function()
	if InfiniteJumpEnabled then
		game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
	end
end)
end)

UniversalSection1:NewSlider("Fov", "Changes player's fov", 120, 60, function(v) -- 500 (MaxValue) | 0 (MinValue)
    game.Workspace.CurrentCamera.FieldOfView = v
end)



-- Example Ui
    if game.PlaceId == 8750997647 then
    InfoSection:NewLabel("You are playing Tapping Legends X.")


-- Tabs/Sections
local FarmTab = Window:NewTab("Autofarm")
local FarmSection = FarmTab:NewSection("Autofarm")
local RebirthTab = Window:NewTab("Rebirth")
local RebirthSection = RebirthTab:NewSection("Rebirth")
local PetsTab = Window:NewTab("Pets")
local PetsSection = PetsTab:NewSection("Pets")
local EggsTab = Window:NewTab("Auto Eggs")
local EggsSection = EggsTab:NewSection("Eggs")
local TeleportTab = Window:NewTab("Teleport")
local TeleportSection = TeleportTab:NewSection("Teleport")
local MiscTab = Window:NewTab("Misc")
local MiscSection = MiscTab:NewSection("Misc")
local RUpgradesSection = MiscTab:NewSection("Ruby Upgrades")
local TUpgradesSection = MiscTab:NewSection("Token Upgrades")
local CustomTab = Window:NewTab("Customize")
local KeybindsSection = CustomTab:NewSection("Keybinds")
local ColorSection = CustomTab:NewSection("Color (Unavailable)")

KeybindsSection:NewKeybind("Toggle UI", "Pressing the keybind toggles the UI", Enum.KeyCode.LeftAlt, function()
	Library:ToggleUI()
end)



-- Getgenv/local
getgenv().autoTap = false;
getgenv().autoRebirth = false;
getgenv().autoEgg = false;
getgenv().autoEquipBest = false
local humanoid = game.Players.LocalPlayer.Character.Humanoid
local EpicPlayerMan = game.Players.LocalPlayer.Character.HumanoidRootPart




-- Functions


function aTap()
    spawn(function()
        while autoTap == true do
            game:GetService("ReplicatedStorage").Remotes.Tap:FireServer()
            wait(0.1)
        end
    end)
end

function aRebirth(rebirthAmount)
    spawn(function()
        while autoRebirth == true do
            game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(rebirthAmount)
            wait(1.0)
        end
    end)
end


local Basic = -55, 157, -796

function aEgg(eggType, amount)
spawn(function()
        while autoEgg == true do
            local args = {
                [1] = (eggType),
                [2] = (amount)
                }
                game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args))
            wait(1.0)
        end
    end)
end

function aRebirth1()
    spawn(function()
        while getgenv().aRebirth1 == true do
            local args = {
            [1] = 1
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth5()
    spawn(function()
        while getgenv().aRebirth5 == true do
            local args = {
            [1] = 2
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth20()
    spawn(function()
        while getgenv().aRebirth20 == true do
            local args = {
            [1] = 3
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth80()
    spawn(function()
        while getgenv().aRebirth80 == true do
            local args = {
            [1] = 4
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth400()
    spawn(function()
        while getgenv().aRebirth400 == true do
            local args = {
            [1] = 5
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    function aRebirth2k()
    spawn(function()
        while getgenv().aRebirth2k == true do
            local args = {
            [1] = 6
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth10k()
    spawn(function()
        while getgenv().aRebirth10k == true do
            local args = {
            [1] = 7
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth40k()
    spawn(function()
        while getgenv().aRebirth40k == true do
            local args = {
            [1] = 8
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth100k()
    spawn(function()
        while getgenv().aRebirth100k == true do
            local args = {
            [1] = 9
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth400k()
    spawn(function()
        while getgenv().aRebirth400k == true do
            local args = {
            [1] = 10
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth2M()
    spawn(function()
        while getgenv().aRebirth2M == true do
            local args = {
            [1] = 11
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    function aRebirth10M()
    spawn(function()
        while getgenv().aRebirth10M == true do
            local args = {
            [1] = 12
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth40M()
    spawn(function()
        while getgenv().aRebirth40M == true do
            local args = {
            [1] = 13
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth100M()
    spawn(function()
        while getgenv().aRebirth100M == true do
            local args = {
            [1] = 14
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth500M()
    spawn(function()
        while getgenv().aRebirth500M == true do
            local args = {
            [1] = 15
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth2B()
    spawn(function()
        while getgenv().aRebirth2B == true do
            local args = {
            [1] = 16
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth10B()
    spawn(function()
        while getgenv().aRebirth10B == true do
            local args = {
            [1] = 17
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth40B()
    spawn(function()
        while getgenv().aRebirth40B == true do
            local args = {
            [1] = 18
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth200B()
    spawn(function()
        while getgenv().aRebirth200B == true do
            local args = {
            [1] = 19
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth1T()
    spawn(function()
        while getgenv().aRebirth1T == true do
            local args = {
            [1] = 20
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth2T()
    spawn(function()
        while getgenv().aRebirth2T == true do
            local args = {
            [1] = 21
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    function aRebirth10T()
    spawn(function()
        while getgenv().aRebirth10T == true do
            local args = {
            [1] = 22
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth40T()
    spawn(function()
        while getgenv().aRebirth40T == true do
            local args = {
            [1] = 23
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth100T()
    spawn(function()
        while getgenv().aRebirth100T == true do
            local args = {
            [1] = 24
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth500T()
    spawn(function()
        while getgenv().aRebirth500T == true do
            local args = {
            [1] = 25
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth2Qd()
    spawn(function()
        while getgenv().aRebirth2Qd == true do
            local args = {
            [1] = 26
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth10Qd()
    spawn(function()
        while getgenv().aRebirth10Qd == true do
            local args = {
            [1] = 27
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth100Qd()
    spawn(function()
        while getgenv().aRebirth100Qd == true do
            local args = {
            [1] = 28
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth500Qd()
    spawn(function()
        while getgenv().aRebirth500Qd == true do
            local args = {
            [1] = 29
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth2Qn()
    spawn(function()
        while getgenv().aRebirth2Qn == true do
            local args = {
            [1] = 30
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    function aRebirth10Qn()
    spawn(function()
        while getgenv().aRebirth10Qn == true do
            local args = {
            [1] = 31
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth40Qn()
    spawn(function()
        while getgenv().aRebirth40Qn == true do
            local args = {
            [1] = 32
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth200Qn()
    spawn(function()
        while getgenv().aRebirth200Qn == true do
            local args = {
            [1] = 33
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth1Sx()
    spawn(function()
        while getgenv().aRebirth1Sx == true do
            local args = {
            [1] = 34
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end
    
    
    function aRebirth5Sx()
    spawn(function()
        while getgenv().aRebirth5Sx == true do
            local args = {
            [1] = 35
            }
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
            wait(0.2)
        end
    end)
    end


function getCurrentPlayerPOS()
    local plyr = game.PLayers.LocalPlayer;
    if plyr.Character then
        return plyr.Character.HumanoidRootPart.Position;
    end
        return false;
end


local Spawn = CFrame.new(-32, 155, -821)
local Forest = CFrame.new(4, 801, -813)
local Desert = CFrame.new(-15, 1386, -816)
local Winter = CFrame.new(45, 2103, -872)
local Lava = CFrame.new(12, 2641, -905)
local Aqua = CFrame.new(-102, 3169, -901)
local Sakura = CFrame.new(-16, 3647, -957)
local Mines = CFrame.new(-20, 4103, -958)
local Galaxy = CFrame.new(-20, 4540, -958)
local Heaven = CFrame.new(-89, 4999, -891)
local Hell = CFrame.new(-90, 5460, -891)
local Tech = CFrame.new(-72, 6037, -870)
local Steampunk = CFrame.new(68, 6477, -855)

function SpawnIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Spawn
end


function ForestIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Forest
end


function DesertIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Desert
end


function WinterIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Winter
end


function LavaIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Lava
end


function AquaIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Aqua
end


function SakuraIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Sakura
end


function MinesIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Mines
end


function GalaxyIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Galaxy
end

function HeavenIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Heaven
end


function HellIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Hell
end


function TechIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Tech
end


function SteampunkIslandTeleport()
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    EpicPlayerMan.CFrame = Steampunk
end
















--((Misc))--

MiscSection:NewButton("Anti AFK", "Stops you from getting kicked", function()
    local vu = game:GetService("VirtualUser")
    game:GetService("Players").LocalPlayer.Idled:connect(function()
       vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
       wait(1)
       vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    end)
end)


MiscSection:NewButton("Tween Teleport Ctrl+Click", "Press Ctrl+Click to teleport wherever :D", function()
local speed = 100 -- set this lower to make it slower
local bodyvelocityenabled = true -- set this to false if you are getting kicked

local Imput = game:GetService("UserInputService")
local Plr = game.Players.LocalPlayer
local Mouse = Plr:GetMouse()

function To(position)
local Chr = Plr.Character
if Chr ~= nil then
local ts = game:GetService("TweenService")
local char = game.Players.LocalPlayer.Character
local hm = char.HumanoidRootPart
local dist = (hm.Position - Mouse.Hit.p).magnitude
local tweenspeed = dist/tonumber(speed)
local ti = TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear)
local tp = {CFrame = CFrame.new(position)}
ts:Create(hm, ti, tp):Play()
if bodyvelocityenabled == true then
local bv = Instance.new("BodyVelocity")
bv.Parent = hm
bv.MaxForce = Vector3.new(100000,100000,100000)
bv.Velocity = Vector3.new(0,0,0)
wait(tonumber(tweenspeed))
bv:Destroy()
end
end
end
end)


--((Upgrade Page))-- (Ruby)
RUpgradesSection:NewButton("Ruby Free Auto Clicker", "Upgrades your free auto clicker", function()
    local EpicRuby1 = "Ruby"
    local EpicUpgrade1 = "FreeAutoClicker"
    
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(EpicRuby1, EpicUpgrade1)
end)

RUpgradesSection:NewButton("Ruby Auto Clicker Multiplier", "Upgrades your Auto Clicker Multiplier", function()
    local EpicRuby2 = "Ruby"
    local EpicUpgrade2 = "AutoClickerMultiplier"
    
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(EpicRuby2, EpicUpgrade2)
end)

RUpgradesSection:NewButton("Ruby Walkspeed", "Upgrades walkspeed", function()
    local EpicRuby3 = "Ruby"
    local EpicUpgrade3 = "WalkSpeed"
    
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(EpicRuby3, EpicUpgrade3)
end)

RUpgradesSection:NewButton("Ruby Critical Chance", "Upgrades Critical Chance", function()
    local EpicRuby4 = "Ruby"
    local EpicUpgrade4 = "CriticalChances"
    
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(EpicRuby4, EpicUpgrade4)
end)

RUpgradesSection:NewButton("Ruby Pet Storage", "Upgrades Pet Storage", function()
    local EpicRuby5 = "Ruby"
    local EpicUpgrade5 = "PetStorage"
    
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(EpicRuby5, EpicUpgrade5)
end)

RUpgradesSection:NewButton("Ruby More Rebirths", "Upgrades amount of rebirths", function()
    local EpicRuby6 = "Ruby"
    local EpicUpgrade6 = "RebirthsUpgrade"
    
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(EpicRuby6, EpicUpgrade6)
end)


RUpgradesSection:NewButton("Ruby Tap Multiplier", "Upgrades Tap Multiplier", function()
    local EpicRuby7 = "Ruby"
    local EpicUpgrade7 = "TapMultiplier"
    
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(EpicRuby7, EpicUpgrade7)
end)



--((Upgrade Page))-- (Token)

TUpgradesSection:NewButton("Token Tap Damage", "Upgrades Tap Damage", function()
    local EpicToken1 = "Token"
    local EpicTokenUpgrade1 = "TapDamage"
    
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(EpicToken1, EpicTokenUpgrade1)
end)

TUpgradesSection:NewButton("Token Pets Equipped", "Upgrades amount of pets equipped", function()
    local EpicToken1 = "Token"
    local EpicTokenUpgrade1 = "PetsEquipped"
    
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(EpicToken1, EpicTokenUpgrade1)
end)

TUpgradesSection:NewButton("Token Golden Chance", "Upgrades Golden Chance", function()
    local EpicToken1 = "Token"
    local EpicTokenUpgrade1 = "GoldenChance"
    
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(EpicToken1, EpicTokenUpgrade1)
end)

TUpgradesSection:NewButton("Token Faster Eggs", "Upgrades speed of eggs hatching", function()
    local EpicToken1 = "Token"
    local EpicTokenUpgrade1 = "FasterEggs"
    
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(EpicToken1, EpicTokenUpgrade1)
end)

TUpgradesSection:NewButton("Token More Luck", "Upgrades egg luck", function()
    local EpicToken1 = "Token"
    local EpicTokenUpgrade1 = "MoreLuck"
    
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(EpicToken1, EpicTokenUpgrade1)
end)

TUpgradesSection:NewButton("Token Rainbow Chance", "Upgrades egg rainbow chance", function()
    local EpicToken1 = "Token"
    local EpicTokenUpgrade1 = "RainbowChance"
    
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(EpicToken1, EpicTokenUpgrade1)
end)

TUpgradesSection:NewButton("Token More Rubies", "Upgrades More Rubies", function()
    local EpicToken1 = "Token"
    local EpicTokenUpgrade1 = "MoreRubies"
    
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(EpicToken1, EpicTokenUpgrade1)
end)

TUpgradesSection:NewButton("Token More Chest Vials", "Upgrades amount of chest vials", function()
    local EpicToken1 = "Token"
    local EpicTokenUpgrade1 = "ChestVials"
    
    game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(EpicToken1, EpicTokenUpgrade1)
end)
















-- Autofarm

FarmSection:NewToggle("Auto Tap", "Taps for you", function(state)
autoTap = true;
if state then
    aTap()
else
    autoTap = false;
end
end)



-- Auto Rebirth

local selectedRebirth;

RebirthSection:NewToggle("Rebirth 1", "Rebirths for you by 1", function(state)
    getgenv().aRebirth1 = true;
    if state then
        aRebirth1()
    else
        getgenv().aRebirth1 = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 5", "Rebirths for you by 5", function(state)
    getgenv().aRebirth5 = true;
    if state then
        aRebirth5()
    else
        getgenv().aRebirth5 = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 20", "Rebirths for you by 20", function(state)
    getgenv().aRebirth20 = true;
    if state then
        aRebirth20()
    else
        getgenv().aRebirth20 = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 80", "Rebirths for you by 80", function(state)
    getgenv().aRebirth80 = true;
    if state then
        aRebirth80()
    else
        getgenv().aRebirth80 = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 400", "Rebirths for you by 400", function(state)
    getgenv().aRebirth400 = true;
    if state then
        aRebirth400()
    else
        getgenv().aRebirth400 = false;
    end
    end)
    
    RebirthSection:NewToggle("Rebirth 2k", "Rebirths for you by 2k", function(state)
    getgenv().aRebirth2k = true;
    if state then
        aRebirth2k()
    else
        getgenv().aRebirth2k = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 10k", "Rebirths for you by 10k", function(state)
    getgenv().aRebirth10k = true;
    if state then
        aRebirth10k()
    else
        getgenv().aRebirth10k = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 40k", "Rebirths for you by 40k", function(state)
    getgenv().aRebirth40k = true;
    if state then
        aRebirth40k()
    else
        getgenv().aRebirth40k = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 100k", "Rebirths for you by 100k", function(state)
    getgenv().aRebirth100k = true;
    if state then
        aRebirth100k()
    else
        getgenv().aRebirth100k = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 400k", "Rebirths for you by 400k", function(state)
    getgenv().aRebirth400k = true;
    if state then
        aRebirth400k()
    else
        getgenv().aRebirth400k = false;
    end
    end)
    
    RebirthSection:NewToggle("Rebirth 2M", "Rebirths for you by 2M", function(state)
    getgenv().aRebirth2M = true;
    if state then
        aRebirth2M()
    else
        getgenv().aRebirth2M = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 10M", "Rebirths for you by 10M", function(state)
    getgenv().aRebirth10M = true;
    if state then
        aRebirth10M()
    else
        getgenv().aRebirth10M = false;
    end
    end)
    
    RebirthSection:NewToggle("Rebirth 40M", "Rebirths for you by 40M", function(state)
    getgenv().aRebirth40M = true;
    if state then
        aRebirth40M()
    else
        getgenv().aRebirth40M = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 100M", "Rebirths for you by 100M", function(state)
    getgenv().aRebirth100M = true;
    if state then
        aRebirth100M()
    else
        getgenv().aRebirth100M = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 500M", "Rebirths for you by 500M", function(state)
    getgenv().aRebirth500M = true;
    if state then
        aRebirth500M()
    else
        getgenv().aRebirth500M = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 2B", "Rebirths for you by 2B", function(state)
    getgenv().aRebirth2B = true;
    if state then
        aRebirth2B()
    else
        getgenv().aRebirth2B = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 10B", "Rebirths for you by 10B", function(state)
    getgenv().aRebirth10B = true;
    if state then
        aRebirth10B()
    else
        getgenv().aRebirth10B = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 40B", "Rebirths for you by 40B", function(state)
    getgenv().aRebirth40B = true;
    if state then
        aRebirth40B()
    else
        getgenv().aRebirth40B = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 200B", "Rebirths for you by 200B", function(state)
    getgenv().aRebirth200B = true;
    if state then
        aRebirth200B()
    else
        getgenv().aRebirth200B = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 1T", "Rebirths for you by 1T", function(state)
    getgenv().aRebirth1T = true;
    if state then
        aRebirth1T()
    else
        getgenv().aRebirth1T = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 2T", "Rebirths for you by 2T", function(state)
    getgenv().aRebirth2T = true;
    if state then
        aRebirth2T()
    else
        getgenv().aRebirth2T = false;
    end
    end)
    
    RebirthSection:NewToggle("Rebirth 10T", "Rebirths for you by 10T", function(state)
    getgenv().aRebirth10T = true;
    if state then
        aRebirth10T()
    else
        getgenv().aRebirth10T = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 40T", "Rebirths for you by 40T", function(state)
    getgenv().aRebirth40T = true;
    if state then
        aRebirth40T()
    else
        getgenv().aRebirth40T = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 100T", "Rebirths for you by 100T", function(state)
    getgenv().aRebirth100T = true;
    if state then
        aRebirth100T()
    else
        getgenv().aRebirth100T = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 500T", "Rebirths for you by 500T", function(state)
    getgenv().aRebirth500T = true;
    if state then
        aRebirth500T()
    else
        getgenv().aRebirth500T = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 2Qd", "Rebirths for you by 2Qd", function(state)
    getgenv().aRebirth2Qd = true;
    if state then
        aRebirth2Qd()
    else
        getgenv().aRebirth2Qd = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 10Qd", "Rebirths for you by 10Qd", function(state)
    getgenv().aRebirth10Qd = true;
    if state then
        aRebirth10Qd()
    else
        getgenv().aRebirth10Qd = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 100Qd", "Rebirths for you by 100Qd", function(state)
    getgenv().aRebirth100Qd = true;
    if state then
        aRebirth100Qd()
    else
        getgenv().aRebirth100Qd = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 500Qd", "Rebirths for you by 500Qd", function(state)
    getgenv().aRebirth500Qd = true;
    if state then
        aRebirth500Qd()
    else
        getgenv().aRebirth500Qd = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 2Qn", "Rebirths for you by 2Qn", function(state)
    getgenv().aRebirth2Qn = true;
    if state then
        aRebirth2Qn()
    else
        getgenv().aRebirth2Qn = false;
    end
    end)
    
    RebirthSection:NewToggle("Rebirth 10Qn", "Rebirths for you by 10Qn", function(state)
    getgenv().aRebirth10Qn = true;
    if state then
        aRebirth10Qn()
    else
        getgenv().aRebirth10Qn = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 40Qn", "Rebirths for you by 40Qn", function(state)
    getgenv().aRebirth40Qn = true;
    if state then
        aRebirth40Qn()
    else
        getgenv().aRebirth40Qn = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 200Qn", "Rebirths for you by 200Qn", function(state)
    getgenv().aRebirth200Qn = true;
    if state then
        aRebirth200Qn()
    else
        getgenv().aRebirth200Qn = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 1Sx", "Rebirths for you by 1Sx", function(state)
    getgenv().aRebirth1Sx = true;
    if state then
        aRebirth1Sx()
    else
        getgenv().aRebirth1Sx = false;
    end
    end)
    
    
    RebirthSection:NewToggle("Rebirth 5Sx", "Rebirths for you by 5Sx", function(state)
    getgenv().aRebirth5Sx = true;
    if state then
        aRebirth5Sx()
    else
        getgenv().aRebirth5Sx = false;
    end
    end)




--(( Pets ))--

PetsSection:NewToggle("Auto Equip Best", "Auto equips the best pets you have", function(state)
    autoEquipBest = true
    if state then
        while autoEquipBest == true do
            game:GetService("ReplicatedStorage").Remotes.EquipBest:InvokeServer()
            wait(1)
        print('Auto Equip Best Pets Is', true)
        end
    else
        autoEquipBest = false
    end
end)

PetsSection:NewButton("Equip Best Pets", "Equips Best Pets", function()
    game:GetService("ReplicatedStorage").Remotes.EquipBest:InvokeServer()
end)







-- Auto Eggs
local selectedEgg;
local location
local Basic = -55, 157, -797

EggsSection:NewDropdown("Auto Open Egg", "Select the egg you want to open", {"Basic Egg", "Rare Egg", "Forest Egg", "Desert Egg", "Winter Egg", "Lava Egg", "Aqua Egg", "Sakura Egg", "Mine Egg", "Galaxy Egg", "Heaven Egg", "Hell Egg", "Tech Egg", "Steampunk Egg" }, function(value)
    selectedEgg = value
    print('Egg selected is: ', value)
end)

EggsSection:NewToggle("Toggle Auto Egg Open 1x", "Toggles the auto Egg Open 1x function", function(state)
    if state then
        autoEgg = true
        aEgg(selectedEgg, 1);
        print('Auto Egg Open is true')
    else
        autoEgg = false
        print('Auto Egg Open is false')
    end
end)

EggsSection:NewToggle("Toggle Auto Egg Open 3x", "Toggles the auto Egg Open 3x function", function(state)
    if state then
        autoEgg = true
        aEgg(selectedEgg, 3);
        print('Auto Egg Open is true')
    else
        autoEgg = false
        print('Auto Egg Open is false')
    end
end)

EggsSection:NewToggle("Toggle Auto Egg Open 4x", "Toggles the auto Egg Open 4x function", function(state)
    if state then
        autoEgg = true
        aEgg(selectedEgg, 4);
        print('Auto Egg Open is true')
    else
        autoEgg = false
        print('Auto Egg Open is false')
    end
end)




-- Teleport
local selectedIsland;

TeleportSection:NewButton("Spawn Island", "Teleports you to Spawn Island", function()
    SpawnIslandTeleport()
    print('Teleported to Spawn Island')
end)

TeleportSection:NewButton("Forest Island", "Teleports you to Forest Island", function()
    ForestIslandTeleport()
    print('Teleported to Forest Island')
end)


TeleportSection:NewButton("Desert Island", "Teleports you to Desert Island", function()
    DesertIslandTeleport()
    print('Teleported to Desert Island')
end)


TeleportSection:NewButton("Winter Island", "Teleports you to Winter Island", function()
    WinterIslandTeleport()
    print('Teleported to Winter Island')
end)


TeleportSection:NewButton("Lava Island", "Teleports you to Lava Island", function()
    LavaIslandTeleport()
    print('Teleported to Lava Island')
end)


TeleportSection:NewButton("Aqua Island", "Teleports you to Aqua Island", function()
    AquaIslandTeleport()
    print('Teleported to Aqua Island')
end)


TeleportSection:NewButton("Sakura Island", "Teleports you to Sakura Island", function()
    SakuraIslandTeleport()
    print('Teleported to Sakura Island')
end)


TeleportSection:NewButton("Mines Island", "Teleports you to Mines Island", function()
    MinesIslandTeleport()
    print('Teleported to Mines Island')
end)


TeleportSection:NewButton("Galaxy Island", "Teleports you to Galaxy Island", function()
    GalaxyIslandTeleport()
    print('Teleported to Galaxy Island')
end)

TeleportSection:NewButton("Heaven Island", "Teleports you to Heaven Island", function()
    HeavenIslandTeleport()
    print('Teleported to Heaven Island')
end)

TeleportSection:NewButton("Hell Island", "Teleports you to Hell Island", function()
    HellIslandTeleport()
    print('Teleported to Hell Island')
end)

TeleportSection:NewButton("Tech Island", "Teleports you to Tech Island", function()
    TechIslandTeleport()
    print('Teleported to Tech Island')
end)

TeleportSection:NewButton("Steampunk Island", "Teleports you to Steampunk Island", function()
    SteampunkIslandTeleport()
    print('Teleported to Steampunk Island')
end)



















end
